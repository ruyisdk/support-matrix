# $schema: ../../assets/docs/schemas/config.schema.json
# yaml-language-server: $schema=../../assets/docs/schemas/config.schema.json

# This file has a schema, ypu can read it to get additional definations
# Suggest use: yaml-language-server in vscode to see comments and auto-complitions

util:
    general_ver_mapper: &general_ver_mapper
    # this version mapper cam map any version like (v?)a.b(.c)?(-*)*(-sp*)*(-*)
        version_mapper:
            type: lambda
            mapper: |
                lambda ver, info: [
                    (
                        m := re.match(r"(v)?0*(?P<major>\d+)(\.0*(?P<minor>\d+))?(\.0*(?P<patch>\d+))?(?P<pre_release_1>(-(?:(?!(SP|trunk\.|LTS))[\w\.]+))*)(-LTS)?(-(SP|trunk\.)(?P<sp_part>\d+))?(-LTS)?(?P<pre_release_2>(-([\w\.]+))*)?(?P<build>(\+([\w\.]+))*)?", ver),
                        f"0.{m["major"]}.0" if not m["minor"] else 
                            f"{m["major"]}{int(m["minor"]):02d}.{m["patch"] or 0}.{m["sp_part"] or 0}{f"{m["pre_release_1"] or ""}{m["pre_release_2"] or ""}".replace('-', '.').replace('.', '-', 1)}{m["build"] or ""}"
                    )[-1] 
                    for re in [__import__("re")]
                ][0]

handler:
    -   plugin: mirrorsite_getter_std
        vendor: milkv-pioneer
        system: openeuler
        variant: LTS
        board_variants: null
        <<: 
            - *general_ver_mapper
        strategy: dd_v1
        fileset:
            -   id: 'main'
                board_variants: null
                desc_mapper:
                    mapper: 'openEuler {info.version} image for Milk-V Pioneer'
            -   id: 'firmware'
                prepend: 'firmware'
                board_variants: null
                desc_mapper:
                    mapper: 'Firmware image for Milk-V Pioneer and openEuler {info.version}'
        files:
            -   id: "img file"
                fileset: [ main ]
                file_filter:
                    type: lambda
                    filter: 'lambda name, info: "openEuler" in name and "firmware" not in name and "img" in name and "sha" not in name'
                partition_map: "disk"
            -   id: "firmware file"
                fileset: [ firmware ]
                file_filter:
                    type: lambda
                    filter: 'lambda name, info: "firmware" in name and "img" in name and "sha" not in name'
                partition_map: "disk"
        url:
            regex: (.*)
            mapper: 'https://fast-mirror.isrc.ac.cn/openeuler/openEuler-{0}/embedded_img/riscv64/SG2042/'

    -   plugin: mirrorsite_getter_std
        vendor: milkv-pioneer
        system: openeuler
        variant: null
        board_variants: null
        <<: 
            - *general_ver_mapper
        strategy: dd_v1
        fileset:
            -   id: 'main'
                board_variants: null
                desc_mapper:
                    mapper: 'openEuler {info.version} image for Milk-V Pioneer'
            -   id: 'firmware'
                prepend: 'firmware'
                board_variants: null
                desc_mapper:
                    mapper: 'Firmware image for Milk-V Pioneer and openEuler {info.version}'
        files:
            -   id: "img file"
                fileset: [ main ]
                file_filter:
                    type: lambda
                    filter: 'lambda name, info: "openEuler" in name and "firmware" not in name and "img" in name and "sha" not in name'
                partition_map: "disk"
            -   id: "firmware file"
                fileset: [ firmware ]
                file_filter:
                    type: lambda
                    filter: 'lambda name, info: "firmware" in name and "img" in name and "sha" not in name'
                partition_map: "disk"
        url:
            regex: (.*)
            mapper: 'https://fast-mirror.isrc.ac.cn/openeuler/openEuler-{0}/embedded_img/riscv64/SG2042/'